<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAJmMcxSbjHgzm4x4M52MeFuci3feAAAAAAAAAAAAAAAAAAAAAJyLd96bjHgzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxuI4k8bmMbfC7j53wuY6+8LmPvfC5jZzxuIts8LaKIwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAm4x4M5yLd94AAAAAAAAAAAAAAAAAAAAAnIt33puM
        eDMAAAAAAAAAAAAAAAAAAAAAAAAAAP+AgALwt4pV8bqO2/G6jvf1x533+NGp//rWr//61q//+NKp//XG
        nPfxuo738bqP2vC4ilP/gIACAAAAAAAAAAAAAAAAAAAAAAAAAACbjHgznIt33gAAAAAAAAAAAAAAAAAA
        AACci3dYmYxzFAAAAAAAAAAAAAAAAAAAAAD0vJAX8bmOyfK8kff51a3//+fB///owv//6ML//+jC///o
        wv//6ML//+jC///nwf/51q7/8ryR9/G5jsfztoYVAAAAAAAAAAAAAAAAAAAAAJmMcxSci3dYAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8biOJPG6jev2y6L5/ua////owv//6ML//+jC///o
        wv//6ML//+jC///owv//6ML//+jC///owv/+5r//9sqi+fG4jOvwtoojAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPS8kBfxuY3m+dKp/P/owv//6ML//+jC///o
        wv//6ML//+jC///owv//6ML//+jC///owv//6ML//+jC///owv//6ML/+NGp/PC6jeTztoYVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8bmOt/fLofj/6ML//+jC///o
        wv//6ML//+jC///owv//6ML//+jC///owv//6ML//+jC///owv//6ML//+jC///owv//6ML/9suh+PG5
        jrMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO+3jFLxvpL0/+fA///o
        wv//6ML//+jC///owv//6ML//+jC//rhuv/x1K//8dSv//rhu///6ML//+jC///owv//6ML//+jC///o
        wv//58H/8byS9e+4i08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8LmO0PnW
        rv//6ML//+jC///owv//6ML//+jC//rhuv/Yso//xZd1/8SWdP/ElnT/xZd1/9mzj//64bz//+jC///o
        wv//6ML//+jC///owv/51a3/8buOzQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO24
        iCvxuY35/+fB///owv//6ML//+jC///owv/54Lr/zKF//8SWdP/ElnT/xJZ0/8SWdP/ElnT/xJZ0/8yi
        f//64br//+jC///owv//6ML//+jC///nwf/xuI3587SJKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/l
        wR3/6cMi88KYgffKoPb+5b///uW///7lv//+5b///uW//+K+mf/PpYP/z6WD/8+lg//PpYP/z6WD/8+l
        g//PpYP/z6WD/+K+mf/+5b///uW///7lv//+5b///uW///fKn/XzwZeA/+nDIv/lwR0AAAAAAAAAAAAA
        AAAAAAAA/+jBz//owu/95L79/uS///7kv//+5L///uS///7kv//+5L///uS///7kv//+5L///uS///7k
        v//+5L///uS///7kv//+5L///uS///7kv//+5L///uS///7kv//+5L///uS///7lvvz/6MLv/+jBzwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALl9Ur3aoXX/8LeL//C3i//wt4v/8LeL/8GVcv9NQDb/TUA2/01A
        Nv9NQDb/TUA2/01ANv9NQDb/TUA2/01ANv9NQDb/wpVz//C3i//wt4v/8LeL//C3i//aoXX/uH5TvAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuH1Tu9qfdP/wt4v/8LeL//C3i//wt4v/wZVy/01A
        Nv9NQDb/TUA2/01ANv9NQDb/TUA2/01ANv9NQDb/TUA2/01ANv/ClXP/8LeL//C3i//wt4v/8LeL/9qg
        dP+5flG6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3fVGb1Jlt//C3i//wt4v/8LeL//C3
        i//fq4L/TkE3/01ANv9NQDb/TUA2/01ANv9NQDb/TUA2/01ANv9NQDb/TkA3/+Crgv/wt4v/8LeL//C3
        i//wt4v/05lt/7Z7UJkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALV7TnLIjmL18LeL//C3
        i//wt4v/8LeL//C3i/9+ZFD/TUA2/01ANv9NQDb/TUA2/01ANv9TRjz/pqCb/8rGw/+yopb/8LeL//C3
        i//wt4v/8LeL//C3i//IjWH0tXpObwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtHxRKbd8
        UPjvtor/8LeL//C3i//wt4v/8LeL/+Crgv9fTkD/TUA2/01ANv9NQDb/TUA2/6Wemf//////////////
        ///0y6v/8LeL//C3i//wt4v/77WK/7d8UPi3fE4nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAuH5S29uhdv/wt4v/8LeL//C3i//wt4v/8LeL/9+rgv+AZVH/TkA3/01ANv9NQDb/x8PA////
        //////////////fZwv/wt4v/8LeL//C3i//aoHT/t35R2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC2eU1Qu4BU9u61if/wt4v/8LeL//C3i//wt4v/8LeL//C3i//gq4P/xZd0/8WX
        dP/rya///////////////fz/8sOe//C3i//wt4v/7rWJ/7qAVPa2e09NAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3fFHHzZJn+PC3i//wt4v/8LeL//C3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//0yKb/99a9//LCnP/wt4v/8LeL//C3i//Mkmb3t3xRxAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALmAURa4fFDo1pxv/PC3i//wt4v/8LeL//C3
        i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/1ptv/Lh8Uea2eUkVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALh9TSu2fFDrzJJm+u61
        if/wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/8LeL//C3i//wt4v/7rWJ/8yRZfq4fVHptHxRKQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyLd1iZjHMUAAAAAAAAAAAAAAAAAAAAALh6
        Uhm3fFDOuoBU9tqhdf/utor/8LeL//C3i//wt4v/8LeL//C3i//wt4v/7raK/9qgdP+7gFP2t3xQy7F6
        ThcAAAAAAAAAAAAAAAAAAAAAmYxzFJyLd1gAAAAAAAAAAAAAAAAAAAAAnIt33puMeDMAAAAAAAAAAAAA
        AAAAAAAAAAAAAP8AAAG2e09XuHxQ3rd8UPnHjWH105lt/9qgdP/aoHT/05lt/8eLYfW3fFD5t31R3bZ5
        T1T/AAABAAAAAAAAAAAAAAAAAAAAAAAAAACbjHgznIt33gAAAAAAAAAAAAAAAAAAAACci3fem4x4MwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs3lNKLZ6TnO1e06ct3xRvbd8Ub21e06ctXtOcrd8
        TicAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuMeDOci3feAAAAAAAAAAAAAAAAAAAAAJyL
        d96djHhbm4x4M5uMeDOhhnkTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmYxzFJuMeDObjHgznYx4W5yLd94AAAAAAAAAAAAA
        AAAAAAAAm4t4wJyLd96ci3fenIt33pyKeFUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACci3dYnIt33pyLd96ci3fem4t4wAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////w///w9////vf/D/73+AH+/+AAf//AAD//gAAf/wA
        AD/8AAA/+AAAH/gAAB/wAAAPwAAAA/AAAA/wAAAP8AAAD/gAAB/4AAAf+AAAH/wAAD/8AAA//gAAf/8A
        AP//gAH/3+AH+9/8P/vf///7w///w///////////
</value>
  </data>
</root>