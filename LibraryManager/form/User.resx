<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTipUser.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpq
        aiRpaWmWa2trqmpqaqNpaWlQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGlp
        aT9qamqhampqGAAAAABVVVUGampqgmtra08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGtr
        a0VqamqdVVVVAwAAAAAAAAAAAAAAAGZmZgVra2ugAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICA
        gAJqamqwampqamlpaYUAAAAAAAAAAAAAAAAAAAAAampqowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAampqfWtra3xqamqOcHBwEGZmZg9sbGwaaWlpLmpqaqNnZ2cqa2triGtra4hra2uIa2triGtr
        a4hra2uIa2trmWtra5lra2syampqjmpqatZqamqmampqu2pqaqlqampIaWlpXGpqamBpaWkiaWlpImlp
        aSJpaWkiaWlpImtra5lra2uZb29vF2pqao5paWnOaGhoNmZmZgVqamokampqMGlpaVxqampIaWlpaGtr
        a5lra2uZa2trmWpqajBpaWmKaWlpim1tbRVqamqOampqowAAAAAAAAAAampqSGlpaVxpaWlcampqSGpq
        ajppaWlVaWlpVWlpaVVoaGgbaWlpimlpaYqAgIACa2trqmtra4EAAAAAAAAAAGpqakhpaWlcaWlpXGpq
        akhqamo8ampqYGpqamBqampgZmZmGWlpaYppaWmKVVVVA2lpaRFpaWkRaWlpEXFxcQlqampIaWlpXGlp
        aVxqampIampqZWtra5lra2uZa2trmWlpaS5paWmKaWlpimlpaS5ra2uZa2trmWtra5lqamplampqSGlp
        aVxpaWlcampqSGpqanFra2uqa2trqmtra6psbGw0aWlpimlpaYpsbGw0a2trqmtra6pra2uqampqcWpq
        akhpaWlcaWlpXGpqakhpaWlVaWlpd2lpaXdpaWl3Z2dnKmlpaYppaWmKZ2dnKmlpaXdpaWl3aWlpd2lp
        aVVqampIaWlpXGlpaVxqampIa2trE2lpaSJpaWkiaWlpIm1tbQdra2uMampqjm1tbQdpaWkiaWlpImlp
        aSJra2sTampqSGlpaVxra2tYampqtmtra5lra2uZa2trmWpqaqNpaWmia2troGlpaaxqamqvampqpGtr
        a5lra2uZa2trmWpqarZra2tYAAAAAWlpaRFpaWkRaWlpEWlpaRFmZmYFAAAAAAAAAAAAAAAAAAAAAFVV
        VQZpaWkRaWlpEWlpaRFpaWkRAAAAAf/jAAD/3QAA/74AAP9eAAD/3gAAgEEAAP5PAADiTwAA/k8AAP5/
        AADiRwAA4kcAAP5/AAD+fwAAgAEAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1tbRVra2tMaWlpVWlpaVVpaWlVa2trTGJi
        Yg0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHFxcQlqamqOampq+mpqavZqamruampq7mpq
        au5ra2v5ampq62pqalkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtbW0Vampqz2pqauBqampUZmZmBQAA
        AAAAAAAAAAAAAHR0dAtqamqAampq/GpqalcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAb29vF2pqatRqamrMbW1tFQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABra2uBa2tr7YCAgAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpqahhqamrWampqzWlp
        aREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1tbRVqamr9bGxsOwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsbGwaampq2Gpq
        as1jY2MSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpqautpaWlcAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpq
        astqamrOY2NjEmlpaVVqamrzY2NjEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAampq62lp
        aVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABjY2MSampq/2xsbEBpaWlaampq+2pqav9ra2sfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABqamrraWlpXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABpaWm/ampq72pqavxqamqhampq/2trax8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGpqautpaWlcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAG1tbQdra2tMaGhoMWpqailqamr/a2trH2trayZpaWkuAAAAAGpq
        ak1tbW0HaWlpZmpqaryAgIACampq8Gtra1gAAAAAbW1tB2lpaRFpaWkRaWlpEWlpaRFpaWkRaWlpEWlp
        aRFpaWkRaWlpEWlpaRFpaWkRaWlpEWlpaRFoaGgWaGhoFmlpaRFmZmYFampqKWpqav9ra2sfaWlpvWlp
        ac5xcXEJampq/2pqamppaWmiampq/2pqattqamr1a2trHwAAAABpaWmsampq/2pqav9qamr/ampq/2pq
        av9qamr/ampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pqaodqamopampq/2tr
        ax9ra2vWampq92pqapNqamr8ampq/2pqavZra2t1ampqc2hoaCwAAAAAAAAAAGpqardqamqmaWlpM2lp
        aTNpaWkzaWlpM2lpaTNpaWkzaWlpM2lpaTNpaWkzaWlpM2lpaTNpaWkzampq5WpqauVpaWkzdHR0C2pq
        ailqamr/a2trH2pqatZpaWn3ampqwGhoaFNvb28XZmZmDwAAAABmZmYKZmZmDwAAAAAAAAAAampqt2lp
        aY8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABra2vea2tr3gAA
        AAAAAAAAampqKWpqav9ra2sfa2trqmtra70AAAAAAAAAAAAAAAAAAAAAAAAAAGtra4hqamqwAAAAAAAA
        AABqamq3aWlpjwAAAABmZmYPaWlpRGlpaURpaWlEaWlpRGlpaURpaWlEaWlpRGlpaSIAAAAAAAAAAGtr
        a95ra2veAAAAAAAAAABqamopampq/2trax9ra2uZampqrQAAAAAAAAAAAAAAAAAAAAAAAAAAaWlpj2pq
        arcAAAAAAAAAAGpqardpaWmPAAAAAGpqamdqamr9ampq/2pqav9qamr/ampq/2pqav9qamr/aWlprAAA
        AAAAAAAAa2tr3mtra94AAAAAAAAAAGpqailqamr/a2trH2tra5lqamqtAAAAAAAAAAAAAAAAAAAAAAAA
        AABpaWmPampqtwAAAAAAAAAAampqt2lpaY8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABra2vea2tr3gAAAAAAAAAAaWlpEWpqavtra2uNampq12pqapAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGlpaY9qamq3AAAAAAAAAABqamq3aWlpjwAAAABra2tFa2trqmtra6pra2uqa2trqmtr
        a6pra2uqa2trqmpqanQAAAAAAAAAAGtra95ra2veAAAAAAAAAAAAAAAAa2trYmpqatZqamq1ampqGAAA
        AAAAAAAAAAAAAAAAAAAAAAAAaWlpj2pqarcAAAAAAAAAAGpqardpaWmPAAAAAGlpaTNqamqXa2trmWtr
        a5lra2uZa2trmWtra5lra2uZaWlpXAAAAAAAAAAAa2tr3mtra94AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpaWmPampqtwAAAAAAAAAAampqt2lpaY8AAAAAYGBgCGlp
        aSJpaWkiaWlpImlpaSJpaWkiaWlpImlpaSJpaWkRAAAAAAAAAABra2vea2tr3gAAAAAAAAAAaWlpEWlp
        aSJpaWkiaWlpImlpaSJpaWkiaWlpImlpaSJgYGAIAAAAAGlpaY9qamq3AAAAAAAAAABqamq3aWlpjwAA
        AABqampvampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pqarYAAAAAAAAAAGtra95ra2veAAAAAAAA
        AABqamq3ampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pqam8AAAAAaWlpj2pqarcAAAAAAAAAAGpq
        ardpaWmPAAAAAFVVVQNoaGggaWlpImlpaSJpaWkiaWlpImlpaSJpaWkidHR0CwAAAAAAAAAAa2tr3mtr
        a94AAAAAAAAAAHR0dAtpaWkiaWlpImlpaSJpaWkiaWlpImlpaSJoaGggVVVVAwAAAABpaWmPampqtwAA
        AAAAAAAAampqt2lpaY8AAAAAa2trN2tra5lra2uZa2trmWtra5lra2uZa2trmWtra5lpaWlhAAAAAAAA
        AABra2vea2tr3gAAAAAAAAAAa2trYmtra5lra2uZa2trmWtra5lra2uZa2trmWtra5loaGg2AAAAAGlp
        aY9qamq3AAAAAAAAAABqamq3aWlpjwAAAABsbGxAampquWpqartqamq7ampqu2pqartqamq7ampqu2lp
        aXIAAAAAAAAAAGtra95ra2veAAAAAAAAAABpaWlyampqu2pqartqamq7ampqu2pqartqamq7ampquWlp
        aT8AAAAAaWlpj2pqarcAAAAAAAAAAGpqardpaWmPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAa2tr3mtra94AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABpaWmPampqtwAAAAAAAAAAampqt2lpaY8AAAAAampqampqav9qamr/ampq/2pq
        av9qamr/ampq/2pqav9qamqyAAAAAAAAAABra2vea2tr3gAAAAAAAAAAampqsmpqav9qamr/ampq/2pq
        av9qamr/ampq/2pqav9qampqAAAAAGlpaY9qamq3AAAAAAAAAABqamq3aWlpjwAAAABiYmINaGhoQmlp
        aURpaWlEaWlpRGlpaURpaWlEaWlpRGZmZh4AAAAAAAAAAGtra95ra2veAAAAAAAAAABmZmYeaWlpRGlp
        aURpaWlEaWlpRGlpaURpaWlEaGhoQmJiYg0AAAAAaWlpj2pqarcAAAAAAAAAAGpqardpaWmPAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaWlp4WpqauSAgIACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpaWmPampqtwAAAAAAAAAAampqt2tr
        a55paWkiaWlpImlpaSJpaWkiaWlpImlpaSJpaWkiZ2dnKmtraz5paWlaa2triGpqatFpaWn+ampq/Gpq
        athpaWl+a2trUWpqajppaWknaWlpImlpaSJpaWkiaWlpImlpaSJpaWkiaWlpImtra55qamq3AAAAAAAA
        AABpaWmnampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pqau5qamq8ampqf2ho
        aCxtbW0jampqjmpqatRqamr3ampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pqav9qamr/ampq/2pq
        aqYAAAAAAAAAAGZmZgVpaWkiaWlpImlpaSJpaWkiaWlpImlpaSJpaWkiaWlpImxsbBpgYGAIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0dHQLampqHWlpaSJpaWkiaWlpImlpaSJpaWkiaWlpImlp
        aSJpaWkiZmZmBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////gH///z8///5/n//8/9//+f/f//N/3//2f9//8H/f//
        9/X///ShgAAUD5/+dH+f/nT5n/50+ZgGdPmf/nD5mA55+ZgOf/mf/n/5mAZgGZ/+f/mYDnAZmA5wGZ/+
        f/mYBmAZn/5/+Z/+f/mf+D/5gAOAAf//////////
</value>
  </data>
</root>